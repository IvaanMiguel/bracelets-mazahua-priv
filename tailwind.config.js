import defaultTheme from 'tailwindcss/defaultTheme'
import colorPalette from './tailwindcolorpalette'
import forms from '@tailwindcss/forms'

/** @type {import('tailwindcss').Config} */
export default {
  darkMode: 'class',

  content: [
    './vendor/laravel/framework/src/Illuminate/Pagination/resources/views/*.blade.php',
    './storage/framework/views/*.php',
    './resources/views/**/*.blade.php',
    './resources/js/**/*.vue',
  ],

  theme: {
    extend: {
      fontFamily: {
        sans: ['Roboto', ...defaultTheme.fontFamily.sans],
      },
      colors: {
        ...colorPalette,
        light: {
          primary: colorPalette.primary[40],
          'surface-tint': colorPalette.primary[40],
          'on-primary': colorPalette.primary[100],
          'primary-container': colorPalette.primary[90],
          'on-primary-container': colorPalette.primary[10],
          secondary: colorPalette.secondary[40],
          'on-secondary': colorPalette.secondary[100],
          'secondary-container': colorPalette.secondary[90],
          'on-secondary-container': colorPalette.secondary[10],
          tertiary: colorPalette.tertiary[40],
          'on-tertiary': colorPalette.tertiary[100],
          'tertiary-container': colorPalette.tertiary[90],
          'on-tertiary-container': colorPalette.tertiary[10],
          error: colorPalette.error[40],
          'on-error': colorPalette.error[100],
          'error-container': colorPalette.error[90],
          'on-error-container': colorPalette.error[10],
          background: colorPalette.neutral[98],
          'on-background': colorPalette.neutral[10],
          surface: colorPalette.neutral[98],
          'on-surface': colorPalette.neutral[10],
          'surface-variant': colorPalette['neutral-variant'][90],
          'on-surface-variant': colorPalette['neutral-variant'][30],
          outline: colorPalette['neutral-variant'][50],
          'outline-variant': colorPalette['neutral-variant'][80],
          shadow: colorPalette.neutral[0],
          scrim: colorPalette.neutral[0],
          'inverse-surface': colorPalette.neutral[20],
          'inverse-on-surface': colorPalette.neutral[95],
          'inverse-primary': colorPalette.primary[80],
          'primary-fixed': colorPalette.primary[90],
          'on-primary-fixed': colorPalette.primary[10],
          'primary-fixed-dim': colorPalette.primary[80],
          'on-primary-fixed-variant': colorPalette.primary[30],
          'secondary-fixed': colorPalette.secondary[90],
          'on-secondary-fixed': colorPalette.secondary[10],
          'secondary-fixed-dim': colorPalette.secondary[80],
          'on-secondary-fixed-variant': colorPalette.secondary[30],
          'tertiary-fixed': colorPalette.tertiary[90],
          'on-tertiary-fixed': colorPalette.tertiary[10],
          'tertiary-fixed-dim': colorPalette.tertiary[80],
          'on-tertiary-fixed-variant': colorPalette.tertiary[30],
          'surface-dim': colorPalette.neutral[87],
          'surface-bright': colorPalette.neutral[98],
          'surface-container-lowest': colorPalette.neutral[100],
          'surface-container-low': colorPalette.neutral[96],
          'surface-container': colorPalette.neutral[94],
          'surface-container-high': colorPalette.neutral[92],
          'surface-container-highest': colorPalette.neutral[90],
        },
        dark: {
          primary: colorPalette.primary[80],
          'surface-tint': colorPalette.primary[80],
          'on-primary': colorPalette.primary[20],
          'primary-container': colorPalette.primary[30],
          'on-primary-container': colorPalette.primary[90],
          secondary: colorPalette.secondary[80],
          'on-secondary': colorPalette.secondary[20],
          'secondary-container': colorPalette.secondary[30],
          'on-secondary-container': colorPalette.secondary[90],
          tertiary: colorPalette.tertiary[80],
          'on-tertiary': colorPalette.tertiary[20],
          'tertiary-container': colorPalette.tertiary[30],
          'on-tertiary-container': colorPalette.tertiary[90],
          error: colorPalette.error[80],
          'on-error': colorPalette.error[20],
          'error-container': colorPalette.error[30],
          'on-error-container': colorPalette.error[90],
          background: colorPalette.neutral[10],
          'on-background': colorPalette.neutral[90],
          surface: colorPalette.neutral[10],
          'on-surface': colorPalette.neutral[90],
          'surface-variant': colorPalette['neutral-variant'][30],
          'on-surface-variant': colorPalette['neutral-variant'][80],
          outline: colorPalette['neutral-variant'][60],
          'outline-variant': colorPalette['neutral-variant'][30],
          shadow: colorPalette.neutral[0],
          scrim: colorPalette.neutral[0],
          'inverse-surface': colorPalette.neutral[90],
          'inverse-on-surface': colorPalette.neutral[20],
          'inverse-primary': colorPalette.primary[40],
          'primary-fixed': colorPalette.primary[90],
          'on-primary-fixed': colorPalette.primary[10],
          'primary-fixed-dim': colorPalette.primary[80],
          'on-primary-fixed-variant': colorPalette.primary[30],
          'secondary-fixed': colorPalette.secondary[90],
          'on-secondary-fixed': colorPalette.secondary[10],
          'secondary-fixed-dim': colorPalette.secondary[80],
          'on-secondary-fixed-variant': colorPalette.secondary[30],
          'tertiary-fixed': colorPalette.tertiary[90],
          'on-tertiary-fixed': colorPalette.tertiary[10],
          'tertiary-fixed-dim': colorPalette.tertiary[80],
          'on-tertiary-fixed-variant': colorPalette.tertiary[30],
          'surface-dim': colorPalette.neutral[6],
          'surface-bright': colorPalette.neutral[24],
          'surface-container-lowest': colorPalette.neutral[4],
          'surface-container-low': colorPalette.neutral[10],
          'surface-container': colorPalette.neutral[12],
          'surface-container-high': colorPalette.neutral[17],
          'surface-container-highest': colorPalette.neutral[22],
        },
      },
    },
  },

  // plugins: [forms],
}
